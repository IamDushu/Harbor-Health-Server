// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type EmailVerification struct {
	VerificationID uuid.UUID `json:"verification_id"`
	Email          string    `json:"email"`
	Token          string    `json:"token"`
	HashedOtp      string    `json:"hashed_otp"`
	Purpose        string    `json:"purpose"`
	Attempts       int32     `json:"attempts"`
	ExpiresAt      time.Time `json:"expires_at"`
	Valid          bool      `json:"valid"`
	CreatedAt      time.Time `json:"created_at"`
}

type Location struct {
	LocationID uuid.UUID `json:"location_id"`
	Name       string    `json:"name"`
	Phone      string    `json:"phone"`
	Address    string    `json:"address"`
	Latitude   string    `json:"latitude"`
	Longitude  string    `json:"longitude"`
	CreatedAt  time.Time `json:"created_at"`
}

type Member struct {
	MemberID       uuid.UUID `json:"member_id"`
	UserID         uuid.UUID `json:"user_id"`
	Gender         string    `json:"gender"`
	DateOfBirth    time.Time `json:"date_of_birth"`
	Insurance      string    `json:"insurance"`
	AddressLineOne string    `json:"address_line_one"`
	AddressLineTwo string    `json:"address_line_two"`
	AcceptedTerms  bool      `json:"accepted_terms"`
	CreatedAt      time.Time `json:"created_at"`
}

type Provider struct {
	ProviderID     uuid.UUID `json:"provider_id"`
	UserID         uuid.UUID `json:"user_id"`
	Credentials    string    `json:"credentials"`
	Specialization string    `json:"specialization"`
	IsAvailable    bool      `json:"is_available"`
	CreatedAt      time.Time `json:"created_at"`
}

type ProviderAvailability struct {
	AvailabilityID uuid.UUID `json:"availability_id"`
	ProviderID     uuid.UUID `json:"provider_id"`
	// 0 = Sunday, 6 = Saturday
	DayOfWeek int32     `json:"day_of_week"`
	StartTime time.Time `json:"start_time"`
	EndTime   time.Time `json:"end_time"`
	CreatedAt time.Time `json:"created_at"`
}

type ProviderLocation struct {
	ProviderID uuid.UUID `json:"provider_id"`
	LocationID uuid.UUID `json:"location_id"`
}

type Session struct {
	SessionID    uuid.UUID `json:"session_id"`
	Email        string    `json:"email"`
	RefreshToken string    `json:"refresh_token"`
	UserAgent    string    `json:"user_agent"`
	ClientIp     string    `json:"client_ip"`
	IsBlocked    bool      `json:"is_blocked"`
	ExpiresAt    time.Time `json:"expires_at"`
	CreatedAt    time.Time `json:"created_at"`
}

type User struct {
	UserID      uuid.UUID `json:"user_id"`
	Email       string    `json:"email"`
	FirstName   string    `json:"first_name"`
	LastName    string    `json:"last_name"`
	PhoneNumber string    `json:"phone_number"`
	IsOnboarded bool      `json:"is_onboarded"`
	CreatedAt   time.Time `json:"created_at"`
}

type Visit struct {
	VisitID     uuid.UUID      `json:"visit_id"`
	ProviderID  uuid.NullUUID  `json:"provider_id"`
	MembersID   uuid.NullUUID  `json:"members_id"`
	ScheduledAt time.Time      `json:"scheduled_at"`
	CompletedAt sql.NullTime   `json:"completed_at"`
	Status      string         `json:"status"`
	Notes       sql.NullString `json:"notes"`
	CreatedAt   time.Time      `json:"created_at"`
}
